Problem Description
Given an unsorted integer array, A of size N. Find the first missing positive integer.
Note: Your algorithm should run in O(n) time and use constant space.
Problem Constraints
1 <= N <= 1000000
-109 <= A[i] <= 109
Input Format
First argument is an integer array A.
Output Format
Return an integer denoting the first missing positive integer.
Example Input
Input 1:
[1, 2, 0]
Input 2:
[3, 4, -1, 1]
Input 3:
[-8, -7, -6]
Example Output
Output 1:
3
Output 2:
2
Output 3:
1

solution:

public class Solution {
    public int firstMissingPositive(int[] A) {
        int i=0;
        while(i<A.length){
            if(A[i]<= A.length && A[i]>=1 && A[i] != A[A[i]-1]){
                int correct_pos= A[i]-1;
                int temp = A[correct_pos];
                A[correct_pos] = A[i];
                A[i]  = temp;
            }
            else{
                i++;
            }
        }
        for(int k=0; k<A.length; k++){
            if(A[k] != k+1){
                return k+1;
            }
        }
        return A.length+1;
    }
}
