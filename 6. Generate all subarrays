Problem Description
You are given an array A of N integers.
Return a 2D array consisting of all the subarrays of the array
Note : The order of the subarrays in the resulting 2D array does not matter.

Problem Constraints
1 <= N <= 100
1 <= A[i] <= 105

Input Format
First argument A is an array of integers.
Output Format1
Return a 2D array of integers in any order.
Example Input
Input 1:
A = [1, 2, 3]
Input 2:
A = [5, 2, 1, 4]
Example Output
Output 1:
[[1], [1, 2], [1, 2, 3], [2], [2, 3], [3]]
Output 2:
[[1 ], [1 4 ], [2 ], [2 1 ], [2 1 4 ], [4 ], [5 ], [5 2 ], [5 2 1 ], [5 2 1 4 ] ]

Solution:

public class Solution {
    public int[][] solve(int[] A) {
        int n = A.length;
        int totalSubarrays = (n * (n + 1)) / 2;
        int index =0;
        int[][] result = new int[totalSubarrays][];
        for( int s=0; s<A.length; s++){
            for(int e=s; e<A.length; e++){
                result[index] = new int[e-s+1];
                int k = 0;
                for(int i=s; i<=e; i++){
                    result[index][k++] = A[i];
                }
                index++;
            }
        }
        return result;
    }
}
